openapi: 3.0.3
info:
  title: SageMaker and S3 API
  description: A RESTful API for interacting with SageMaker and S3 resources.
  version: 1.0.0

paths:
  # This operation can be redundant if we get the pre-signed URL instead
  /inference/list-endpoint-deployment-jobs:
    get:
      summary: Get a list of endpoint deployment jobs
      operationId: listEndpointDeploymentJobs
      responses:
        '200':
          description: Returns a list of endpoint deployment jobs

  /inference/list-inference-jobs:
    get:
      summary: Get a list of inference jobs
      operationId: listInferenceJobs
      responses:
        '200':
          description: Returns a list of inference jobs

  /inference/get-endpoint-deployment-job:
    get:
      summary: Get a specific endpoint deployment job
      operationId: getEndpointDeploymentJob
      parameters:
        - name: jobID
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns the specific endpoint deployment job

  /inference/get-inference-job:
    get:
      summary: Get a specific inference job
      operationId: getInferenceJob
      parameters:
        - name: jobID
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns the specific inference job

  /inference/get-inference-job-image-output:
    get:
      summary: Get image output for a specific inference job
      operationId: getInferenceJobImageOutput
      parameters:
        - name: jobID
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns a list of presigned URLs for each image output of the inference job

  /inference/get-inference-job-param-output:
    get:
      summary: Get param output for a specific inference job
      operationId: getInferenceJobParamOutput
      parameters:
        - name: jobID
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns a list containing a presigned URL for the JSON parameter output of the inference job

  /inference/generate-s3-presigned-url-for-uploading:
    get:
      summary: Generate a presigned URL for uploading to S3
      operationId: generateS3PresignedUrlForUploading
      parameters:
        - name: s3_bucket_name
          in: query
          schema:
            type: string
        - name: key
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns a presigned URL for uploading to S3

  /inference/get-texual-inversion-list:
    get:
      summary: Get a list of 'texual_inversion' objects
      operationId: getTexualInversionList
      responses:
        '200':
          description: Returns a list of 'texual_inversion' objects from S3

  /inference/get-lora-list:
    get:
      summary: Get a list of 'lora' objects
      operationId: getLoraList
      responses:
        '200':
          description: Returns a list of 'lora' objects from S3

  /inference/get-hypernetwork-list:
    get:
      summary: Get a list of 'hypernetwork' objects
      operationId: getHypernetworkList
      responses:
        '200':
          description: Returns a list of 'hypernetwork' objects from S3

  /inference/get-controlnet-model-list:
    get:
      summary: Get a list of 'controlnet' objects
      operationId: getControlnetModelList# There is more to the API, so I will continue.

  /inference/run-model-merge:
    post:
      summary: Run model merge
      operationId: runModelMerge
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                checkpoint_info:
                  type: object
      responses:
        '200':
          description: Returns the inference ID, status, endpoint name, and output path


 